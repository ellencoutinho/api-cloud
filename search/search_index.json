{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Sobre o projeto","text":"<p>Esse \u00e9 o projeto individual da disciplina Computa\u00e7\u00e3o em nuvem, do 6\u00ba semestre de Engenharia de Computa\u00e7\u00e3o no Insper. Trata-se de uma estrutura de requisi\u00e7\u00e3o \u00e0 API, com autentica\u00e7\u00e3o, para obter o clima di\u00e1rio na cidade de S\u00e3o Paulo.</p> <p>Para isso, \u00e9 realizado web scrapping da p\u00e1gina de clima do G1, que se atualiza diariamente. Disso, retira-se as seguintes informa\u00e7\u00f5es:</p> <ol> <li>Data</li> <li>Descri\u00e7\u00e3o do clima</li> <li>Temperatura m\u00ednima</li> <li>Temperatura m\u00e1xima</li> </ol> <p>Tais informa\u00e7\u00f5es s\u00e3o retornadas pela API em um json, conforme demonstrado na aba \"Endpoints\". O funcionamento b\u00e1sico est\u00e1 exemplificado em um v\u00eddeo no YouTube</p> <p>Realizado pela aluna Ellen Coutinho Li\u00e3o da Silva.</p>"},{"location":"#passos-para-acessar-o-projeto","title":"Passos para acessar o projeto","text":"<ol> <li>Clonar e abrir o reposit\u00f3rio</li> <li>Executar <code>bash docker-compose up -d</code> na raiz do projeto</li> </ol>"},{"location":"#estrutura-de-arquivos","title":"Estrutura de arquivos","text":"<pre><code>app/   # Onde os servi\u00e7os est\u00e3o alocados\n    api.py # Fun\u00e7\u00f5es e classes que tratam as requisi\u00e7\u00f5es\n    scrapping.py # Fun\u00e7\u00e3o que realiza o WebScrapping\n    requirements.txt \n    Dockerfile\ndocs/ # Arquivos .md da documenta\u00e7\u00e3o do projeto\nsite/ # Arquivos de renderiza\u00e7\u00e3o da documenta\u00e7\u00e3o do projeto\ncompose.yaml\nmkdocs.yml\n</code></pre>"},{"location":"#tecnologias-utilizadas","title":"Tecnologias utilizadas","text":"<ul> <li>Docker</li> <li>Postgres</li> <li>FastAPI</li> <li>MKDocs</li> <li>Python</li> </ul>"},{"location":"#links-relevantes","title":"Links relevantes","text":"<ul> <li>C\u00f3digo fonte</li> <li>V\u00eddeo no YouTube</li> <li>Imagem no DockerHub</li> </ul>"},{"location":"docker/","title":"Docker","text":"<p>Os comandos executados dentro da pasta app, para gerar a imagem publicada no DockerHub, foram:</p> <ol> <li><code>bash docker login</code></li> <li><code>bash docker build -t ellencoutinho/api-clima:v5 .</code></li> <li><code>bash docker push ellencoutinho/api-clima:v5</code></li> </ol>"},{"location":"endpoints/","title":"Endpoints","text":"<p>A API possui suporte \u00e0 3 endpoints:</p> <ol> <li> <p>POST /registrar</p> <p>Atribui\u00e7\u00e3o de registrar um usu\u00e1rio na base de dados</p> <ul> <li> <p>Retorna 200 quando o registro criado com sucesso, com token JWT atribu\u00eddo no cadastro  </p> </li> <li> <p>Retorna 409 quando o email j\u00e1 foi registrado </p> </li> </ul> </li> <li> <p>POST /login</p> <p>Atribui\u00e7\u00e3o de gerar um token JWT (utilizado como modo de autentica\u00e7\u00e3o) somente aos usu\u00e1rios que j\u00e1 estiverem registrados na base de dados</p> <ul> <li> <p>Retorna 200 quando a autentica\u00e7\u00e3o foi bem sucedida  </p> </li> <li> <p>Retorna 401 quando parte das credenciais est\u00e3o inv\u00e1lidas </p> </li> </ul> </li> <li> <p>GET /consultar</p> <p>Atribui\u00e7\u00e3o de checar se o usu\u00e1rio a fazer a solicita\u00e7\u00e3o est\u00e1 autenticado, para assim fornecer as informa\u00e7\u00f5es do webscrapping. Isso significa observar se o token JWT contido no campo \"Authentication: Bearer\" do header da requisi\u00e7\u00e3o \u00e9 v\u00e1lido.</p> <ul> <li> <p>Retorna 200 quando a autentica\u00e7\u00e3o \u00e9 bem sucedida, ent\u00e3o retorna as informa\u00e7\u00f5es do clima </p> </li> <li> <p>Retorna 403 quando o token JWT submetido no header da requisi\u00e7\u00e3o n\u00e3o \u00e9 coerente com o token do login </p> </li> </ul> </li> </ol>"}]}